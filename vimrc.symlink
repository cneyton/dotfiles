"------------------------------------------------------------
" Features {{{1
"
" These options and commands enable some very useful features in Vim, that
" no user should have to live without.

" Set 'nocompatible' to ward off unexpected things that your distro might
" have made, as well as sanely reset options when re-sourcing .vimrc
set nocompatible

:let mapleader = ','

"------------------------------------------------------------
" Vundle {{{1
"
" Manage vim plugins

filetype off                  " required

"set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Solarized colorscheme
Plugin 'altercation/vim-colors-solarized'
"let g:solarized_termcolors=256
"let g:solarized_termtrans=1
"set t_Co=256

" YouCompleteMe
Plugin 'Valloric/YouCompleteMe'
let g:ycm_autoclose_preview_window_after_insertion=1

" Nerdtree
Plugin 'scrooloose/nerdtree'
nnoremap <leader>n :NERDTreeToggle<CR>
" Close  vim is the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" NerdCommenter
Plugin 'scrooloose/nerdcommenter'

" Agvim
Plugin 'rking/ag.vim'

" DelimitMate
Plugin 'Raimondi/delimitMate'

" CtrlP
Plugin 'ctrlpvim/ctrlp.vim'
let g:ctrlp_working_path_mode = 'wa'

" Snippets
" Snippets engine
Plugin 'SirVer/ultisnips'
let g:UltiSnipsExpandTrigger="<c-space>"
let g:UltiSnipsJumpForwardTrigger="<c-space>"
let g:UltiSnipsJumpBackwardTrigger="<c-s-space>"
let g:UltiSnipsEditSplit="vertical" " let :UltiSnipsEdit split the window.
let g:snips_author="cneyton"
let g:UltiSnipsSnippetDirectories=[$HOME.'/.dotfiles/UltiSnips', "UltiSnips"]
" Snippets library
Plugin 'honza/vim-snippets'

" Fugitive
Plugin 'tpope/vim-fugitive'
nnoremap <leader>gs :G<CR>
nnoremap <leader>gd :Gvdiff<CR>
nnoremap <leader>gf :diffget //2<CR>
nnoremap <leader>gj :diffget //3<CR>

" Flog
Plugin 'rbong/vim-flog'
nnoremap <leader>gl :Flog -date=short -format=%h%Creset\ (%cr)\ %Cblue%s\ %Cred%d%Cgreen\ %an%Creset<CR>

" Powerline
Plugin 'powerline/powerline', {'rtp': 'powerline/bindings/vim/'}
" Mode already shown by powerline
set noshowmode

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" Enable syntax highlighting and colorscheme
syntax on
set background=dark
colorscheme solarized

"------------------------------------------------------------
" Must have options {{{1
"
" These are highly recommended options.

" Vim with default settings does not allow easy switching between multiple files
" in the same editor window. Users can use multiple split windows or multiple
" tab pages to edit multiple files, but it is still best to enable an option to
" allow easier switching between files.
"
" One such option is the 'hidden' option, which allows you to re-use the same
" window and switch from an unsaved buffer without saving it first. Also allows
" you to keep an undo history for multiple files when re-using the same window
" in this way. Note that using persistent undo also lets you undo in multiple
" files even in the same window, but is less efficient and is actually designed
" for keeping undo history after closing Vim entirely. Vim will complain if you
" try to quit without saving, and swap files will keep you safe if your computer
" crashes.
set hidden

" Note that not everyone likes working this way (with the hidden option).
" Alternatives include using tabs or split windows instead of re-using the same
" window as mentioned above, and/or either of the following options:
" set confirm
" set autowriteall

" Better command-line completion
set wildmenu

" Show partial commands in the last line of the screen
set showcmd

" Optimize for fast terminal connection
set ttyfast

" Highlight searches (use <C-L> to temporarily turn off highlighting; see the
" mapping of <C-L> below)
set hlsearch
" Highlight dynamically as pattern is typed
set incsearch


" Modelines have historically been a source of security vulnerabilities. As
" such, it may be a good idea to disable them and use the securemodelines
" script, <http://www.vim.org/scripts/script.php?script_id=1876>.
" set nomodeline
set modeline

"------------------------------------------------------------
" Usability options {{{1
"
" These are options that users frequently set in their .vimrc. Some of them
" change Vim's behaviour in ways which deviate from the true Vi way, but
" which are considered to add usability. Which, if any, of these options to
" use is very much a personal preference, but they are harmless.

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

" Modify grep with colors and the rnis option
set grepprg=grep\ -rnis\ --color=always\ $*\ /dev/null

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" When opening a new line and no filetype-specific indenting is enabled, keep
" the same indent as the line you're currently on. Useful for READMEs, etc.
set autoindent

" Stop certain movements from always going to the first character of a line.
" While this behaviour deviates from that of Vi, it does what most users
" coming from other editors would expect.
set nostartofline

" Display the cursor position on the last line of the screen or in the status
" line of a window
set ruler

" Always display the status line, even if only one window is displayed
set laststatus=2

" Instead of failing a command because of unsaved changes, instead raise a
" dialogue asking if you wish to save changed files.
set confirm

" Use visual bell instead of beeping when doing something wrong
set visualbell

" And reset the terminal code for the visual bell. If visualbell is set, and
" this line is also included, vim will neither flash nor beep. If visualbell
" is unset, this does nothing.
set t_vb=

" Enable use of the mouse for all modes
set mouse=a

" Allow dragging in tmux
set ttymouse=xterm2

" Set the command window height to 2 lines, to avoid many cases of having to
" press <Enter> to continue
"set cmdheight=2

" Display line numbers on the left
set number

" Display relative line numbers
set relativenumber

" Quickly time out on keycodes, but never time out on mappings
set notimeout ttimeout ttimeoutlen=200

" Use <F11> to toggle between 'paste' and 'nopaste'
set pastetoggle=<F11>

" Highlight current line
set cursorline

" Start scrolling three lines before the horizontal window border
set scrolloff=3

" Show matching braces
set showmatch

" Use the system clipboard
set clipboard=unnamed

" Trailing whitespace are forbidden, so highlight them.
highlight ForbiddenWhitespace ctermbg=DarkRed guibg=DarkRed
autocmd InsertLeave * match ForbiddenWhitespace /\s\+$/
" Do not highlight spaces at the end of line while typing on that line.
autocmd InsertEnter * match ForbiddenWhitespace /\s\+\%#\@<!$/

"You complete me highlighting scheme
set signcolumn=yes
"highligh SignColumn ctermbg=Black
highligh clear SignColumn
highligh clear VertSplit
"highlight YcmErrorSection ctermbg=DarkRed guibg=DarkRed
"highlight YcmWarningSection ctermbg=DarkMagenta guibg=DarkMagenta

" Exclude files and directories from search
set wildignore+=*.so,*.swp,*.zip,*/build/*

"------------------------------------------------------------
" Indentation options {{{1
"
" Indentation settings according to personal preference.

" Indentation settings for using 4 spaces instead of tabs.
" Do not change 'tabstop' from its default value of 8 with this setup.
set shiftwidth=4
set softtabstop=4
set expandtab

" C/C++ identation
"set cindent
set cinoptions=(0

" Allow tabs in Makefiles.
autocmd FileType make,automake set noexpandtab shiftwidth=8 softtabstop=8

"------------------------------------------------------------
" Mappings {{{1
"
" Useful mappings

" Map Y to act like D and C, i.e. to yank until EOL, rather than act as yy,
" which is the default
map Y y$

" Map <C-L> (redraw screen) to also turn off search highlighting until the
" next search
nnoremap <CR> :nohl<CR><C-L>

" Mapping for ctags
nnoremap <C-G> <C-]>
nnoremap g<C-G> g<C-]>


"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>


"------------------------------------------------------------
" Code folding {{{1
"
"
set foldmethod=syntax " fold based on indent
set foldlevelstart=99
set foldnestmax=10 " deepest fold is 10 levels
set nofoldenable " don't fold by default
set foldlevel=1"
